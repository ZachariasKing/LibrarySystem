#BlueJ class context
comment0.target=ItemReservation
comment0.text=\r\n\ ItemReservation\ models\ an\ item\ reservation\ in\ the\ sense\ that\ it\ stores\ a\ unique\ reservation\ number,\ item\ code\ for\ the\ reserved\ item,\r\n\ userID\ of\ the\ borrowing\ user,\ start\ date\ of\ the\ reservation\ lasts.\r\n\r\n\ @author\ Zacharias\ King\r\n\ @version\ 26/04/2018\r\n
comment1.params=
comment1.target=ItemReservation()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ ItemReservation\r\n
comment10.params=
comment10.target=void\ writeLatestResNumber()
comment10.text=\r\n\ This\ method\ writes\ the\ latestResNo\ to\ a\ file\ that\ we\ can\ then\ use\ when\ generating\ a\ new\ item\ reservation\ number\ for\ the\ next\ \r\n\ item\ reservation,\ should\ we\ happen\ to\ terminate\ our\ library\ system.\r\n
comment11.params=
comment11.target=void\ printDetails()
comment11.text=\r\n\ This\ method\ prints\ out\ the\ details\ for\ an\ ItemReservation\ instance\r\n
comment12.params=pWriter
comment12.target=void\ writeData(java.io.PrintWriter)
comment12.text=\r\n\ This\ method\ firstly\ creates\ a\ 'lineOfOutput'\ using\ the\ data\ we\ have\ stored\ in\ the\ insance\ variables\ and\ then,\r\n\ using\ a\ <code>PrintWriter</code>\ object,\ we\ write\ it\ to\ the\ file\ name\ it\ was\ given\ in\ Library\r\n\ \r\n\ @param\ pWriter\ is\ the\ <codePrintWriter</code>\ that\ is\ already\ linked\ to\ a\ file\ to\ write\ to.\r\n\ @throws\ FileNotFoundException\r\n
comment13.params=dataScanner
comment13.target=void\ extractData(java.util.Scanner)
comment13.text=\r\n\ This\ method\ extracts\ data\ from\ a\ line\ of\ text\ given\ to\ the\ scanner\ being\ passed\ as\ an\ argument\ into\r\n\ the\ method.\r\n\ \r\n\ @param\ dataScanner\ is\ the\ <code>Scanner</code>\ used\ to\ extract\ each\ piece\ of\ data\ with\ a\ certain\ \r\n\ delimiter\ (here\ it\ is\ "[\ ]*(,)[\ ]*")\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ This\ method\ overrides\ the\ 'toString()'\ method\ in\ the\ Object\ class\ and,\ instead\ of\ just\ printing\ the\ hexidecimal\ value\ of\ the\ object\ in\ memory,\r\n\ we\ can\ use\ this\ to\ print\ out\ useful\ information\ about\ the\ object\ when\ it\ is\ printed.\r\n\ \r\n\ @return\ a\ String\ of\ useful\ information\ about\ the\ specific\ ItemReservation\ object\r\n\ \r\n\ @override\ \r\n
comment2.params=reservationNo\ itemCode\ userID\ startDate\ noOfDays
comment2.target=ItemReservation(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ ItemReservation\r\n
comment3.params=
comment3.target=java.lang.String\ getReservationNo()
comment3.text=\r\n\ This\ accessor\ method\ returns\ the\ reservation\ number\ for\ the\ ItemReservation\r\n\ \r\n\ @return\ This\ returns\ the\ reservation\ number\r\n
comment4.params=
comment4.target=java.lang.String\ getItemCode()
comment4.text=\r\n\ This\ accessor\ method\ returns\ the\ item\ code\ for\ the\ ItemReservation\r\n\ \r\n\ @return\ this\ returns\ the\ itemCode\ of\ the\ ItemReservation\ object\r\n
comment5.params=
comment5.target=java.lang.String\ getUserID()
comment5.text=\r\n\ This\ accessor\ method\ returns\ the\ user\ ID\ for\ the\ ItemReservation\r\n\ \r\n\ @return\ this\ returns\ the\ userID\ of\ the\ ItemReservation\ object\r\n
comment6.params=
comment6.target=java.util.Date\ getStartDate()
comment6.text=\r\n\ This\ accessor\ method\ returns\ the\ start\ datefor\ the\ ItemReservation\r\n\ \r\n\ @return\ this\ returns\ the\ startDate\ of\ the\ ItemReservation\ object\r\n
comment7.params=
comment7.target=int\ getNoOfDays()
comment7.text=\r\n\ This\ accessor\ method\ returns\ the\ number\ of\ days\ of\ the\ reservation\r\n\ \r\n\ @return\ this\ returns\ the\ length\ of\ the\ ItemReservation\ in\ number\ of\ days\r\n
comment8.params=
comment8.target=boolean\ isLatestReservationNoPresent()
comment9.params=
comment9.target=void\ generateReservationNo()
comment9.text=\r\n\ This\ method\ generates\ a\ unique\ reservation\ number\ for\ each\ item\ reservation.\ It\ uses\ the\ HashMap's\ current\ size\ in\ order\ to\ determine\ a\ new\ reservation\ number.\r\n\ So,\ for\ example,\ if\ the\ itemReservationMap\ had\ 2\ key/value\ pairs\ already,\ the\ number\ generated\ would\ pad\ however\ many\ zeros\ and\ add\ +1\ of\ the\ size\ (e.g.\ 000003)\r\n\ \r\n\ @param\ reservationMap\ this\ is\ the\ Map\ we\ want\ to\ use\ to\ determine\ its\ size\ and\ base\ a\ unique\ reservation\ number\ off\ of\ this\r\n\ \r\n
numComments=15
